// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication2.Data;

#nullable disable

namespace WebApplication2.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250313130559_Migracja1")]
    partial class Migracja1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.2");

            modelBuilder.Entity("WebApplication2.Models.Klienci", b =>
                {
                    b.Property<int>("IdKlienta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdKlienta");

                    b.ToTable("Klienci");

                    b.HasData(
                        new
                        {
                            IdKlienta = 2,
                            Email = "adamnowak@gmail.com",
                            Imie = "Adam",
                            Nazwisko = "Nowak",
                            Telefon = "123123123"
                        });
                });

            modelBuilder.Entity("WebApplication2.Models.Rowery", b =>
                {
                    b.Property<int>("IdRoweru")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Amortyzacja")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Cena")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Hamulce")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Napęd")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Producent")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RozmiarRamy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TypRoweru")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdRoweru");

                    b.ToTable("Rowery");

                    b.HasData(
                        new
                        {
                            IdRoweru = 1,
                            Amortyzacja = "Przod i tyl ",
                            Cena = 100m,
                            Hamulce = "Tarczowe",
                            Napęd = "2x12",
                            Nazwa = "Trance",
                            Producent = "Scott",
                            RozmiarRamy = "L",
                            Status = "Dostepny",
                            TypRoweru = "Gorski"
                        });
                });

            modelBuilder.Entity("WebApplication2.Models.Wypozyczenia", b =>
                {
                    b.Property<int>("IdWypozyczenia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataWypozyczenia")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataZwrotu")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdKlienta")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdRoweru")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("KosztWypozyczenia")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("IdWypozyczenia");

                    b.HasIndex("IdKlienta");

                    b.HasIndex("IdRoweru");

                    b.ToTable("Wypozyczenia");
                });

            modelBuilder.Entity("WebApplication2.Models.Wypozyczenia", b =>
                {
                    b.HasOne("WebApplication2.Models.Klienci", "Klient")
                        .WithMany()
                        .HasForeignKey("IdKlienta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication2.Models.Rowery", "Rower")
                        .WithMany()
                        .HasForeignKey("IdRoweru")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Klient");

                    b.Navigation("Rower");
                });
#pragma warning restore 612, 618
        }
    }
}
